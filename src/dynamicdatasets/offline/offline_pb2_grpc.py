# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import dynamicdatasets.offline.offline_pb2 as offline__pb2


class OfflineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetData = channel.unary_unary(
            '/offline.Offline/GetData',
            request_serializer=offline__pb2.DataRequest.SerializeToString,
            response_deserializer=offline__pb2.DataResponse.FromString,
        )


class OfflineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OfflineServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetData': grpc.unary_unary_rpc_method_handler(
            servicer.GetData,
            request_deserializer=offline__pb2.DataRequest.FromString,
            response_serializer=offline__pb2.DataResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'offline.Offline', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


class Offline(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetData(request,
                target,
                options=(),
                channel_credentials=None,
                call_credentials=None,
                insecure=False,
                compression=None,
                wait_for_ready=None,
                timeout=None,
                metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/offline.Offline/GetData',
            offline__pb2.DataRequest.SerializeToString,
            offline__pb2.DataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata)
